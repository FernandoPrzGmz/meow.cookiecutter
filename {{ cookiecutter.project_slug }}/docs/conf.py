# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

from datetime import date
current_year = date.today().year

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))
import os
import sys

import django
sys.path.insert(0, os.path.abspath('..'))
os.environ['DJANGO_SETTINGS_MODULE'] = 'src.core.settings'
django.setup()

# -- Project information -----------------------------------------------------

project = '{{cookiecutter.project_name }}'
copyright = F'{current_year}, {{cookiecutter.author_name}}'
author = '{{cookiecutter.author_name}}'

# The full version, including alpha/beta/rc tags
release = '1.0'


# -- General configuration ---------------------------------------------------

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # region sphinx extensions
    # Permite escribir los docstrings con la convención NumPy o Google.
    'sphinx.ext.napoleon',
    
    # Genera la documentación a partir de los docstrings del código fuente
    'sphinx.ext.autodoc',
    
    # Genera automáticamente archivos .rst para automatizar el trabajo que hace autodoc
    'sphinx.ext.autosummary',
    
    # Permite ver el código fuente desde la documentación
    'sphinx.ext.viewcode',

    # Permite hacer links entre documentaciones
    'sphinx.ext.intersphinx',
    
    # Agrega herramientas para llevar la cuenta de los "TO DO"
    'sphinx.ext.todo',
    
    # Permite agregar fórmulas matemáticas escritas en LaTeX.
    'sphinx.ext.mathjax',
    # endregion

    # region 3rd party extensions
    # Responsive Material Design tema para sphinx
    'sphinx_immaterial',
    # endregion
]

# Boolean indicating whether to scan all found documents for autosummary
# directives, and to generate stub pages for each. It is enabled by default.
# Can also be a list of documents for which stub pages should be generated.
autosummary_generate = True

# A boolean flag (default is False) indicating whether to document classes and
# functions imported in modules.
# autosummary_imported_members = True

# The default options for autodoc directives. They are applied to all autodoc
# directives automatically. It must be a dictionary which maps option names to
# the values.
autodoc_default_options = {
    'members': None,
    'member-order': 'bysource',
    'special-members': '__init__',
    'undoc-members': True,
    # 'exclude-members': '__weakref__'
}

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'es'

# The document name of the “root” document, that is, the document that contains
# the root toctree directive.
# Default is 'index'.
root_doc = 'contents'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# A string of reStructuredText that will be included at the end of every source
# file that is read. This is a possible place to add substitutions that should
# be available in every file (another being rst_prolog).
rst_epilog = (
    F".. |project_name| replace:: {project}"
    F""
)


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
html_theme = 'sphinx_immaterial'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']


# material theme options (see theme.conf for more information)
html_theme_options = {
    # Specify a site_url used to generate sitemap.xml links. If not specified,
    # then no sitemap will be built.
    'site_url': '{{ cookiecutter.docs_site_url }}',
    # Set the repo url for the link to appear.
    'repo_url': '{{ cookiecutter.docs_repo_url }}',
    # The name of the repo. If must be set if repo_url is set.
    'repo_name': '{{cookiecutter.docs_repo_name }}',
    # Must be one of github, gitlab or bitbucket.
    'repo_type': '{{cookiecutter.docs_repo_type }}',
    # The icon that represents the source code repository can be changed using
    # the repo field of the icon dict (within the html_theme_options dict).
    'icon': {
        'repo': 'fontawesome/brands/{{cookiecutter.docs_repo_type }}',
    },
    #
    'edit_uri': 'blob/master/docs',
    #
    'palette': [
        {
            'media': '(prefers-color-scheme: light)',
            'scheme': 'default',
            'primary': 'teal',
            'accent': 'green',
            'toggle': {
                'icon': 'material/weather-sunny',
                'name': 'Cambiar a modo oscuro',
            },
        },
        {
            'media': '(prefers-color-scheme: dark)',
            'scheme': 'slate',
            'primary': 'teal',
            'accent': 'green',
            'toggle': {
                'icon': 'material/weather-night',
                'name': 'Cambiar al modo claro',
            },
        },
    ],
    # 
    'font': {
        # used for all the pages' text
        'text': 'Montserrat',
        # used for literal code blocks
        'code': 'Montserrat'
    },
}
